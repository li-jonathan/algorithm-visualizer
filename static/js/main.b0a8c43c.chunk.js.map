{"version":3,"sources":["logo.svg","SortingVisualizer/SortingVisualizer.jsx","SearchingVisualizer/SearchingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SortingVisualizer","props","state","array","this","resetArray","animations","arr","len","length","i","j","push","temp","getBubbleSortAnimations","arrayBars","document","getElementsByClassName","change","bar1Index","bar2Index","height1","height2","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","height","key","getInsertionSortAnimations","min","getSelectionSortAnimations","Math","floor","random","setState","className","map","value","index","onClick","bubbleSort","insertionSort","selectionSort","alert","React","Component","SearchingVisualizer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0a8c43c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './SortingVisualizer.css';\r\n\r\nconst NUM_ARRAY_BARS = 50;\r\nconst PRIMARY_COLOR = '#2a9d8f';\r\nconst COMPARING_COLOR = '#e9c46a';\r\nconst ANIMATION_SPEED = 50;\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations = getBubbleSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      \r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n      const [change, bar1Index, bar2Index, height1, height2] = animations[i];\r\n      const barOneStyle = arrayBars[bar1Index].style;\r\n      const barTwoStyle = arrayBars[bar2Index].style;\r\n\r\n      if (change === 'colorChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = COMPARING_COLOR;\r\n          barTwoStyle.backgroundColor = COMPARING_COLOR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n      if (change === 'noColorChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n      if (change === 'heightChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${height1}px`;\r\n          barTwoStyle.height = `${height2}px`;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  insertionSort() {\r\n\r\n    const animations = getInsertionSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n      const [change, bar1Index, bar2Index, height1, height2] = animations[i];\r\n      const barOneStyle = arrayBars[bar1Index].style;\r\n      const barTwoStyle = arrayBars[bar2Index].style;\r\n\r\n      if (change === 'colorChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = COMPARING_COLOR;\r\n          barTwoStyle.backgroundColor = COMPARING_COLOR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n      if (change === 'noColorChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n      if (change === 'heightChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${height1}px`;\r\n          barTwoStyle.height = `${height2}px`;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectionSort() {\r\n\r\n    const animations = getSelectionSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n      const [change, bar1Index, bar2Index, height1, height2] = animations[i];\r\n      const barOneStyle = arrayBars[bar1Index].style;\r\n      const barTwoStyle = arrayBars[bar2Index].style;\r\n\r\n      if (change === 'colorChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = COMPARING_COLOR;\r\n          barTwoStyle.backgroundColor = COMPARING_COLOR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n      if (change === 'noColorChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n      if (change === 'heightChange') {\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${height1}px`;\r\n          barTwoStyle.height = `${height2}px`;\r\n        }, i * ANIMATION_SPEED);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < NUM_ARRAY_BARS; i++) {\r\n      array.push(generateRandomInt());\r\n    }\r\n\r\n    this.setState({array: array});\r\n  }\r\n\r\n\r\n  render() {\r\n    const {array} = this.state;\r\n\r\n    return (\r\n      <div className=\"array\">\r\n        {array.map((value, index) => (\r\n          <div className=\"array-bar\" key={index} style={{backgroundColor: PRIMARY_COLOR, height:`${value}px`,}}></div>\r\n        ))}\r\n        <div className=\"buttons\">\r\n          <button className=\"generate\" onClick={() => this.resetArray()}>Generate New Array</button>\r\n          <button className=\"bubble\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n          <button className=\"insertion\" onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n          <button className=\"selection\" onClick={() => this.selectionSort()}>Selection Sort</button>\r\n          <button className=\"quick\" onClick={() => alert(\"Algorithm not implemented yet...\")}>Quick Sort</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Helper Methods\r\n\r\n/**\r\n * Generate random integer between 10 and 500.\r\n */\r\nfunction generateRandomInt() {\r\n  return Math.floor(Math.random() * 500) + 10;\r\n}\r\n\r\nfunction getBubbleSortAnimations(arr) {\r\n\r\n  const animations = [];\r\n\r\n  const len = arr.length;\r\n  for (let i = 0; i < len - 1; i++) {\r\n    for (let j = 0; j < len - i - 1; j++) {\r\n      // push values we are comparing\r\n      animations.push([\"colorChange\", j, j+1, 0, 0]); // push once to change colors\r\n      animations.push([\"noColorChange\", j, j+1, 0, 0]); // push again to revert colors\r\n      if (arr[j] > arr[j+1]) {\r\n        let temp = arr[j];\r\n        arr[j] = arr[j+1];\r\n        arr[j+1] = temp;\r\n        animations.push([\"heightChange\", j, j+1, arr[j], arr[j+1]])\r\n      }\r\n    }\r\n  }\r\n  return animations;\r\n}\r\n\r\nfunction getInsertionSortAnimations(arr) {\r\n  const animations = [];\r\n  const len = arr.length; \r\n  for (let i = 1; i < len; ++i) { \r\n    const key = arr[i]; \r\n    let j = i - 1; \r\n       \r\n    animations.push([\"colorChange\", j, i, 0, 0]);\r\n    animations.push([\"noColorChange\", j, i, 0, 0]);\r\n    while (j >= 0 && arr[j] > key) {\r\n      animations.push([\"colorChange\", j+1, j, 0, 0]);\r\n      animations.push([\"noColorChange\", j+1, j, 0, 0]);\r\n      animations.push([\"heightChange\", j+1, j, arr[j], key])\r\n      arr[j + 1] = arr[j];\r\n      j = j - 1; \r\n    } \r\n\r\n    arr[j + 1] = key;\r\n    animations.push([\"heightChange\", j+1, i, key, arr[i]])\r\n  } \r\n  return animations;\r\n}\r\n\r\nfunction getSelectionSortAnimations(arr) {\r\n  const animations = [];\r\n  const len = arr.length; \r\n\r\n  for (let i = 0; i < len - 1; i++) {\r\n    let min = i;\r\n    for (let j = i + 1; j < len; j++) {\r\n      animations.push([\"colorChange\", j, min, 0, 0]);\r\n      animations.push([\"noColorChange\", j, min, 0, 0]);\r\n      if (arr[j] < arr[min]) {\r\n        min = j;\r\n      }\r\n    }\r\n    let temp = arr[min];\r\n    arr[min] = arr[i];\r\n    arr[i] = temp;\r\n    animations.push([\"heightChange\", min, i, arr[min], arr[i]])\r\n  }\r\n  return animations;\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default class SearchingVisualizer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"array\">\r\n          <p>searching visualizer goes here...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport SearchingVisualizer from './SearchingVisualizer/SearchingVisualizer';\n\nfunction App() {\n  return (  \n    <div className=\"App\">\n      <h1>Sorting Algorithm Visualizer</h1>\n      <SortingVisualizer></SortingVisualizer>\n      <h1>Searching Algorithm Visualizer</h1>\n      <SearchingVisualizer></SearchingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}